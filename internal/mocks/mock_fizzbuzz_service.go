// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package service

import (
	"context"

	"github.com/julietteengel/fizzbuzz-api/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// NewMockIFizzBuzzService creates a new instance of MockIFizzBuzzService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIFizzBuzzService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIFizzBuzzService {
	mock := &MockIFizzBuzzService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockIFizzBuzzService is an autogenerated mock type for the IFizzBuzzService type
type MockIFizzBuzzService struct {
	mock.Mock
}

type MockIFizzBuzzService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIFizzBuzzService) EXPECT() *MockIFizzBuzzService_Expecter {
	return &MockIFizzBuzzService_Expecter{mock: &_m.Mock}
}

// GenerateFizzBuzz provides a mock function for the type MockIFizzBuzzService
func (_mock *MockIFizzBuzzService) GenerateFizzBuzz(ctx context.Context, request model.FizzBuzzRequest) (*model.FizzBuzzResponse, error) {
	ret := _mock.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for GenerateFizzBuzz")
	}

	var r0 *model.FizzBuzzResponse
	var r1 error
	if returnFunc, ok := ret.Get(0).(func(context.Context, model.FizzBuzzRequest) (*model.FizzBuzzResponse, error)); ok {
		return returnFunc(ctx, request)
	}
	if returnFunc, ok := ret.Get(0).(func(context.Context, model.FizzBuzzRequest) *model.FizzBuzzResponse); ok {
		r0 = returnFunc(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.FizzBuzzResponse)
		}
	}
	if returnFunc, ok := ret.Get(1).(func(context.Context, model.FizzBuzzRequest) error); ok {
		r1 = returnFunc(ctx, request)
	} else {
		r1 = ret.Error(1)
	}
	return r0, r1
}

// MockIFizzBuzzService_GenerateFizzBuzz_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenerateFizzBuzz'
type MockIFizzBuzzService_GenerateFizzBuzz_Call struct {
	*mock.Call
}

// GenerateFizzBuzz is a helper method to define mock.On call
//   - ctx
//   - request
func (_e *MockIFizzBuzzService_Expecter) GenerateFizzBuzz(ctx interface{}, request interface{}) *MockIFizzBuzzService_GenerateFizzBuzz_Call {
	return &MockIFizzBuzzService_GenerateFizzBuzz_Call{Call: _e.mock.On("GenerateFizzBuzz", ctx, request)}
}

func (_c *MockIFizzBuzzService_GenerateFizzBuzz_Call) Run(run func(ctx context.Context, request model.FizzBuzzRequest)) *MockIFizzBuzzService_GenerateFizzBuzz_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(model.FizzBuzzRequest))
	})
	return _c
}

func (_c *MockIFizzBuzzService_GenerateFizzBuzz_Call) Return(fizzBuzzResponse *model.FizzBuzzResponse, err error) *MockIFizzBuzzService_GenerateFizzBuzz_Call {
	_c.Call.Return(fizzBuzzResponse, err)
	return _c
}

func (_c *MockIFizzBuzzService_GenerateFizzBuzz_Call) RunAndReturn(run func(ctx context.Context, request model.FizzBuzzRequest) (*model.FizzBuzzResponse, error)) *MockIFizzBuzzService_GenerateFizzBuzz_Call {
	_c.Call.Return(run)
	return _c
}
